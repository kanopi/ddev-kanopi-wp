name: ddev-kanopi-wp

# Minimum DDEV version required
ddev_version_constraint: ">= 1.24.3"

project_files:
- docker-compose.kanopi-wp.yaml
- commands/web/create-block
- commands/web/development
- commands/web/production
- commands/web/refresh
- commands/web/activate-theme
- commands/web/restore-admin-user
- commands/web/open
- commands/host/phpcs
- commands/host/phpcbf
- commands/host/npm
- commands/host/terminus
- commands/host/init
- commands/host/configure
- config/php/php.ini
- config/nginx/nginx-site.conf
- config/helpers/load-config.sh
- config/wp/block-template/block.json
- config/wp/block-template/edit.js
- config/wp/block-template/editor.scss
- config/wp/block-template/index.js
- config/wp/block-template/save.js
- config/wp/block-template/style.scss
- config/wp/block-template/view.js
- config.kanopi.yaml
- config.kanopi.local.yaml.example

post_install_actions:
- |
  echo "✅ Kanopi WordPress DDEV add-on installed successfully!"
  echo ""
  cp config.kanopi.yaml ../config.kanopi.yaml
  cp config.kanopi.local.yaml.example ../config.kanopi.local.yaml
  echo ".ddev/config.kanopi.local.yaml" >> ../../.gitignore 2>/dev/null || true
  
  # Add ddev-managed settings to wp-config.php
  if [ -f "../../web/wp-config.php" ]; then
    # Check if the ddev settings snippet is already present
    if ! grep -q "wp-config-ddev.php" "../../web/wp-config.php"; then
      # Create a temporary file with the new content
      {
        head -n 1 "../../web/wp-config.php"  # <?php line
        echo ""
        echo "// Added for ddev-managed settings in wp-config-ddev.php."
        echo "\$ddev_settings = dirname(__FILE__) . '/wp-config-ddev.php';"
        echo "if (is_readable(\$ddev_settings) && !defined('DB_USER')) {"
        echo "  require_once(\$ddev_settings);"
        echo "}"
        echo ""
        tail -n +2 "../../web/wp-config.php"  # Rest of the file
      } > "../../web/wp-config.php.tmp"
      mv "../../web/wp-config.php.tmp" "../../web/wp-config.php"
      echo "📝 Added ddev-managed settings to wp-config.php"
    else
      echo "📝 ddev-managed settings already present in wp-config.php"
    fi
  else
    echo "⚠️  wp-config.php not found at web/wp-config.php"
  fi
  echo "📋 Next steps:"
  echo ""
  echo "1. 🔧 Configure your settings:"
  echo "   ddev configure  # Interactive setup wizard"
  echo "   # OR edit .ddev/config.kanopi.yaml manually"
  echo ""
  echo "2. 🏛️ Set Pantheon token (if using Pantheon):"
  echo "   ddev config global --web-environment-add=TERMINUS_MACHINE_TOKEN=your_token"
  echo ""
  echo "3. 🚀 Initialize your environment:"
  echo "   ddev init  # Complete development setup"
  echo ""
  echo "📖 Documentation: https://github.com/kanopi/ddev-kanopi-wp"
  echo "🆘 Issues: https://github.com/kanopi/ddev-kanopi-wp/issues"

removal_actions:
- rm -f ../config.kanopi.yaml
- rm -f ../config.kanopi.local.yaml
- |
  if [ -f ../../.gitignore ]; then
    grep -v "config.kanopi.local.yaml" ../../.gitignore > ../../.gitignore.tmp && mv ../../.gitignore.tmp ../../.gitignore || rm -f ../../.gitignore.tmp
  fi
- echo "ddev-kanopi-wp add-on removed successfully"