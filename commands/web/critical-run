#!/usr/bin/env bash

## Description: Run Critical CSS Commands
## Usage: critical:run
## Example: "ddev critical:run"
## Aliases: critical,crr,critical-run

# Abort if anything fails
set -e

#-------------------------- Helper functions --------------------------------

green='\033[0;32m'
yellow='\033[1;33m'
NC='\033[0m'

divider='===================================================\n'
construction='\xF0\x9F\x9A\xA7'
rocket='\xF0\x9F\x9A\x80'
lightning='\xE2\x9A\xA1'

#-------------------------- Settings --------------------------------

# Get theme configuration from environment variables
THEME_PATH=$(printenv THEME 2>/dev/null || echo "wp-content/themes/custom/struts")
DOCROOT=$(printenv DOCROOT 2>/dev/null || echo "web")

# Define full theme path
FULL_THEME_PATH="/var/www/html/${DOCROOT}/${THEME_PATH}"

#-------------------------- Execution -------------------------------------

# Check if theme directory exists
if [ ! -d "$FULL_THEME_PATH" ]; then
    echo -e "\n${yellow}Theme directory not found: $FULL_THEME_PATH${NC}"
    echo -e "Please ensure your theme is located at the correct path or update THEME environment variable in .ddev/config.yaml"
    exit 1
fi

# Check if package.json exists
if [ ! -f "$FULL_THEME_PATH/package.json" ]; then
    echo -e "\n${yellow}package.json not found in theme directory: $FULL_THEME_PATH${NC}"
    echo -e "Please ensure your theme has a package.json file with npm scripts configured"
    echo -e "Run ${yellow}ddev critical:install${NC} to set up critical CSS tools first"
    exit 1
fi

# Critical CSS message
echo -e "\n ${lightning} ${yellow} Running Critical CSS generation. ${NC} ${lightning}\n"
echo -e "${green}${divider}${NC}"

# Move to the theme directory
echo -e "\n ${rocket} ${yellow} Navigating to theme directory: ${FULL_THEME_PATH} ${NC} ${rocket}"
echo -e "${green}${divider}${NC}"
cd "$FULL_THEME_PATH"

# Set up NVM
export NVM_DIR="$HOME/.nvm" || echo "export NVM_DIR=$HOME/.nvm"
source "$NVM_DIR/nvm.sh" || echo "source $NVM_DIR/nvm.sh"

# Use Node version specified in .nvmrc if it exists
if [ -f "${FULL_THEME_PATH}/.nvmrc" ]; then
    NODE_VERSION=$(cat "${FULL_THEME_PATH}/.nvmrc")
    echo "Using Node.js version: ${NODE_VERSION}"
    nvm use || echo "nvm use"
else
    echo "No .nvmrc found, using default Node version"
    nvm use default || nvm use node
fi

# Install dependencies if node_modules doesn't exist
if [ ! -d "node_modules" ]; then
    echo -e "\n ${construction} ${yellow} Installing NPM dependencies... ${NC} ${construction}"
    echo -e "${green}${divider}${NC}"
    npm install
fi

# Run Critical CSS generation
echo -e "\n ${construction} ${yellow} Generating Critical CSS... ${NC} ${construction}"
echo -e "${green}${divider}${NC}"
npm run criticalcss

echo -e "\n${yellow}Critical CSS generation completed!${NC}"
echo -e "${green}${divider}${NC}"