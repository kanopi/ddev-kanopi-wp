#!/usr/bin/env bash

## Restore the admin user credentials
##
## Usage: wp-restore-admin-user
## Example: ddev wp-restore-admin-user
## Aliases: restore-admin-user,wp:restore-admin-user

#ddev-generated

# Load configuration with local override support
source /var/www/html/.ddev/scripts/load-config.sh
load_kanopi_config

echo "Restoring admin user: $WP_ADMIN_USER"

# Determine docroot based on hosting provider
case "${HOSTING_PROVIDER}" in
    "pantheon")
        DOCROOT="web"
        DOCROOT_PATH="/var/www/html/${DOCROOT}"
        ;;
    "wpengine")
        # Use configured DOCROOT from environment, fallback to 'web'
        DOCROOT="${DOCROOT:-web}"
        # Handle application root case (. or empty)
        if [ "$DOCROOT" = "." ] || [ -z "$DOCROOT" ]; then
            DOCROOT_PATH="/var/www/html"
            echo "Using application root (no subfolder) for WordPress"
        else
            DOCROOT_PATH="/var/www/html/${DOCROOT}"
        fi
        ;;
    "kinsta")
        DOCROOT="public"
        DOCROOT_PATH="/var/www/html/${DOCROOT}"
        ;;
    *)
        DOCROOT=$(printenv DOCROOT 2>/dev/null || echo "web")
        DOCROOT_PATH="/var/www/html/${DOCROOT}"
        ;;
esac

# Check if WordPress is installed
if [ ! -f "${DOCROOT_PATH}/index.php" ]; then
    echo "WordPress not found at ${DOCROOT_PATH}. Skipping admin user restoration."
    exit 0
fi

# Create or update admin user
wp user create "$WP_ADMIN_USER" "$WP_ADMIN_EMAIL" --role=administrator --user_pass="$WP_ADMIN_PASS" --allow-root 2>/dev/null || \
wp user update "$WP_ADMIN_USER" --user_pass="$WP_ADMIN_PASS" --user_email="$WP_ADMIN_EMAIL" --allow-root

echo "Admin user restored successfully!"
echo "Username: $WP_ADMIN_USER"
echo "Password: $WP_ADMIN_PASS"
echo "Email: $WP_ADMIN_EMAIL"
