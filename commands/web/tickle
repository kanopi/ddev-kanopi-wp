#!/usr/bin/env bash

## Description: Continuously wake up a hosting environment to prevent it from sleeping.
## Usage: tickle [site.env]
## Example: ddev tickle my-site.dev

# Abort if anything fails
set -e

# Get configuration from environment variables
HOSTING_PROVIDER="${HOSTING_PROVIDER:-pantheon}"
DEFAULT_SITE=$(printenv HOSTING_SITE 2>/dev/null || echo "")
DEFAULT_ENV=$(printenv HOSTING_ENV 2>/dev/null || echo "dev")

# Use provided argument or default site.env
if [ -n "$1" ]; then
    SITE_ENV="$1"
else
    if [ -n "$DEFAULT_SITE" ]; then
        SITE_ENV="${DEFAULT_SITE}.${DEFAULT_ENV}"
    else
        echo -e " ‚ùå  Error: No site specified and no default configured."
        echo -e "     Usage: ddev tickle <site.env>"
        echo -e "     Or configure HOSTING_SITE environment variable in .ddev/config.yaml"
        exit 1
    fi
fi

if [ "$HOSTING_PROVIDER" = "pantheon" ]; then
    echo -e "\n ‚úÖ  Logging into Terminus. \n"
    terminus auth:login

    echo -e "\n ‚è∞  Starting Pantheon wake-up loop for ${SITE_ENV}.\n"

    # Infinite loop to wake the Pantheon environment every 5 minutes (300 seconds).
    while true
    do
        TIMESTAMP=$(date)
        echo -e "\n üìÖ  ${TIMESTAMP} - Waking up ${SITE_ENV}."
        terminus env:wake "${SITE_ENV}"
        echo -e "\n ‚è≥  Sleeping for 5 minutes..."
        sleep 300
    done
else
    echo -e " ‚ùå  Tickle command currently only supports Pantheon environments."
    echo -e "     WPEngine and Kinsta environments don't require wake-up calls."
    exit 1
fi