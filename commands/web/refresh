#!/bin/bash

## Refresh the site database from Pantheon
##
## Usage: refresh

#ddev-generated

# Abort if anything fails
set -e

# Load configuration from YAML
CONFIG_FILE="/var/www/html/.ddev/config.kanopi.yaml"
if [ -f "$CONFIG_FILE" ]; then
    PANTHEON_SITE=$(yq eval '.pantheon.site // ""' "$CONFIG_FILE" 2>/dev/null)
    PANTHEON_ENV=$(yq eval '.pantheon.env // "dev"' "$CONFIG_FILE" 2>/dev/null || echo "dev")
else
    PANTHEON_SITE=""
    PANTHEON_ENV="dev"
fi

# Get Pantheon token from global DDEV environment
PANTHEON_TOKEN="${TERMINUS_MACHINE_TOKEN:-}"

# Check required configuration
if [ -z "$PANTHEON_SITE" ] || [ "$PANTHEON_SITE" = "your-pantheon-site-name" ]; then
    echo "PANTHEON_SITE is not configured. Please edit .ddev/config.kanopi.yaml"
    exit 1
fi

if [ -z "$PANTHEON_TOKEN" ]; then
    echo "TERMINUS_MACHINE_TOKEN is not set globally."
    echo "Please run: ddev config global --web-environment-add=TERMINUS_MACHINE_TOKEN=your_token"
    exit 1
fi
DOCROOT="${DOCROOT:-web}"

cd "/var/www/html/${DOCROOT}"

echo "Pulling Database from Pantheon..."

# Check if terminus is available
if ! command -v terminus &> /dev/null; then
    echo "Installing Terminus..."
    curl -O https://raw.githubusercontent.com/pantheon-systems/terminus-installer/master/builds/installer.phar && php installer.phar install
fi

# Authenticate with Pantheon if needed
if [ -n "$PANTHEON_TOKEN" ]; then
    terminus auth:login --machine-token="$PANTHEON_TOKEN"
fi

# Create database backup and download
echo "Creating and downloading database backup..."
terminus backup:create "${PANTHEON_SITE}.${PANTHEON_ENV}" --element=database
DB_BACKUP_URL=$(terminus backup:get "${PANTHEON_SITE}.${PANTHEON_ENV}" --element=database --field=url)

# Download and import database
curl -o /tmp/database.sql.gz "$DB_BACKUP_URL"
gunzip /tmp/database.sql.gz
wp db import /tmp/database.sql.gz --allow-root

echo "Running search and replace for local domains..."
BASE_DOMAIN="${PANTHEON_ENV}-${PANTHEON_SITE}.pantheonsite.io"
LOCAL_DOMAIN="${DDEV_SITENAME}.ddev.site"

wp search-replace "$BASE_DOMAIN" "$LOCAL_DOMAIN" --url="$BASE_DOMAIN" --all-tables --allow-root

# Flush rewrite rules
wp rewrite flush --allow-root

# Deactivate problematic plugins
wp plugin deactivate wp-health --allow-root 2>/dev/null || true

# Activate theme
ddev activate-theme

# Restore admin user
ddev restore-admin-user

echo "Database refresh completed successfully!"
echo "Site URL: https://${LOCAL_DOMAIN}"